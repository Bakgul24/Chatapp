@page
@model ChatApp.Pages.HomeModel
@{
    <script>

        function checkAuthentication() {
            var isAuthenticated = sessionStorage.getItem("isAuthenticated");
            if (!isAuthenticated) {
                window.location.href = "/";
            }
        }

        function checkAuthenticationBool() {
            var isAuthenticated = sessionStorage.getItem("isAuthenticated");
            if (!isAuthenticated) {
                return false;
            }

            return true;
        }

    </script>
}

@section Scripts {
    <script src="~/js/signalr/signalr.js"></script>
    <script>

        window.onload = function () {
            checkAuthentication();
        };

        if (checkAuthenticationBool()) {
            var userName = sessionStorage.getItem("userName") || ""; // Retrieve userName from localStorage or set a default value

            var connection = new signalR.HubConnectionBuilder()
                .withUrl(`/chatHub?userName=${encodeURIComponent(userName)}`)
                .withAutomaticReconnect()
                .configureLogging(signalR.LogLevel.Information)
                .build();

            connection.start().then(function () {

            }).catch(function (err) {
                return console.error(err.toString());
            });

            connection.on("SetOnlineUsers", function (onlineUsers) {

                var usersTable = document.getElementById("users");

                usersTable.innerHTML = "";

                onlineUsers.forEach(function (onlineUser) {
                    var tr = document.createElement("tr")
                    var td = document.createElement("td");
                    var button = document.createElement("button");

                    button.textContent = onlineUser.firstName + ' ' + onlineUser.lastName;
                    button.onclick = function () {
                        sessionStorage.setItem("toFullName", onlineUser.firstName + ' ' + onlineUser.lastName)
                        sessionStorage.setItem("toMail", onlineUser.email)

                        window.location.href = "Index";
                    };

                    tr.style = "margin: 10px; display: flex;"
                    button.className = "button-arounder"

                    td.appendChild(button);
                    tr.appendChild(td);
                    usersTable.appendChild(tr);
                });

            });
        }
    </script>
}

<!DOCTYPE html>
<html>
<head>
    <style>
        body {           
            background-image: url('gri.png');
        }

        .buttons-container {
            width: 100%;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        button {
            background: white;
            border: solid 2px black;
            padding: .375em 1.125em;
            font-size: 1rem;
        }

        .button-arounder {
            font-size: 1.2rem;
            background: #93BFA3;
            color: hsl(190deg, 10%, 95%);
            box-shadow: 0 0px 0px hsla(190deg, 15%, 5%, .2);
            border-top-left-radius: 0px;
            border-top-right-radius: 0px;
            border-bottom-left-radius: 0px;
            border-bottom-right-radius: 0px;
            --dur: .15s;
            --delay: .15s;
            --radius: 16px;
            transition: border-top-left-radius var(--dur) var(--delay) ease-out, border-top-right-radius var(--dur) calc(var(--delay) * 2) ease-out, border-bottom-right-radius var(--dur) calc(var(--delay) * 3) ease-out, border-bottom-left-radius var(--dur) calc(var(--delay) * 4) ease-out, box-shadow calc(var(--dur) * 4) ease-out, transform calc(var(--dur) * 4) ease-out, background calc(var(--dur) * 4) steps(4, jump-end);
        }

            .button-arounder:hover,
            .button-arounder:focus {
                box-shadow: 0 4px 8px hsla(190deg, 15%, 5%, .2);
                transform: translateY(-4px);
                background: #93BFA3;
                border-top-left-radius: var(--radius);
                border-top-right-radius: var(--radius);
                border-bottom-left-radius: var(--radius);
                border-bottom-right-radius: var(--radius);
            }
    </style>
</head>

<body>
    <div style="display:flex; flex-direction:column; align-items:center; justify-content:center; width:100%; height:100%; gap:10px">
        <div style="background-color:#93BFA3;; width: 75%; border-radius: 5px; padding: 10px">
            <h1 style="color:white">Online Users</h1>
        </div>
        <div id ="users" style="background:#fdf5e6; width:75%; height:500px; max-height:500px; overflow:auto; padding:10px">
        </div>
    </div>
</body>
</html>
